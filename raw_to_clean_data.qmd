---
title: "raw_to_clean_data"
author: "Dominik Dianovics"
format: html
---

# Emotional landscape of reesearchers pilot data cleaning

## Raw to clean data

### Installing packages

```{r echo=FALSE, output=FALSE}
library(tidyverse)
library(here)
data_path <- here("data")
```

### Importing data

```{r echo=FALSE}
raw_data_01 = read.csv(here::here("data/raw/april_30_decisionlab.csv"))
raw_data_02 = read.csv(here::here("data/raw/april_30_aczellab.csv"))

if (identical(names(raw_data_01), names(raw_data_02))) {
  cat("The column names are identical.\n")
} else {
  cat("The column names are different.\n")
}

raw_data = raw_data_01 |> 
  full_join(raw_data_02)
```

### Checking metadata

```{r}
meta_data = raw_data |> 
  select(StartDate, 
         EndDate,
         Status,
         Duration..in.seconds.,
         Progress,
         RecordedDate,
         ResponseId,
         UserLanguage,
         DistributionChannel)
```

### Creating codebook

```{r}
raw_data_filtered_codebook = raw_data[1, , drop = FALSE]
```

### Unifying syntax

```{r}
raw_data_syntax = raw_data |> 
  rename_with(tolower) |> 
  slice(-c(1, 2))
```

### Checking for invalid data

```{r}
raw_data_valid = raw_data_syntax |> 
  filter(distributionchannel != "anonymous",
         dismiss_1 != "No")

```

### Creation of anonym id and dropping unnecessary columns

```{r}
raw_data_filtered = raw_data_valid |> 
  mutate(anonym_id = row_number()) |> 
  mutate(finished = ifelse(finished == "True", T, F)) |> 
  select(-startdate, -enddate, -status, -distributionchannel, -userlanguage, -progress, -responseid) |> 
  relocate(anonym_id)

```

### Filter specific respondents

```{r}
#If there is at least one response after category of work, it stays.

#Anonym_id 22 is a test response
#Anonym_id 132 is an incomplete response
#Anonym_id 134 is an incomplete response


raw_data_filtered = raw_data_filtered |> 
  filter(anonym_id != 22,
         anonym_id != 132,
         anonym_id != 134)
```

# Saving data

```{r}
write.csv(raw_data_filtered, here::here("data/processed/raw_to_clean_data.csv"), row.names = FALSE)
write.csv(raw_data_filtered_codebook, here::here("data/processed/codebook.csv"), row.names = FALSE)
write.csv(meta_data, here::here("data/processed/meta_data.csv"), row.names = FALSE)
```